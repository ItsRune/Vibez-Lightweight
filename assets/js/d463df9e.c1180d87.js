"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[894],{8142:e=>{e.exports=JSON.parse('{"functions":[{"name":"unpackResult","desc":"Unpacks a result value into a usable return value.","params":[],"returns":[],"function_type":"static","ignore":true,"source":{"line":49,"path":"src/init.luau"}},{"name":"new","desc":"Constructs a new Vibez wrapper with the specified key.","params":[{"name":"apiKey","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Ranking"}],"function_type":"static","source":{"line":58,"path":"src/init.luau"}},{"name":"_sendHttpRequest","desc":"Sends an HTTP request with the api key (if a vibez route was determined to be the host).","params":[],"returns":[{"desc":"","lua_type":"BaseHttpResponse"}],"function_type":"method","private":true,"source":{"line":84,"path":"src/init.luau"}},{"name":"getGroupId","desc":"Fetches the group associated with the api key.","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","yields":true,"source":{"line":142,"path":"src/init.luau"}},{"name":"setRank","desc":"Sets the rank of a player and `whoCalled` (Optional) is used for logging purposes.","params":[{"name":"self","desc":"","lua_type":"Ranking"},{"name":"User","desc":"","lua_type":"Player | string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }?"}],"returns":[{"desc":"","lua_type":"SetRankResponse"}],"function_type":"method","yields":true,"source":{"line":167,"path":"src/init.luau"}},{"name":"Promote","desc":"Promotes a player and `whoCalled` (Optional) is used for logging purposes.","params":[{"name":"self","desc":"","lua_type":"Ranking"},{"name":"User","desc":"","lua_type":"Player | string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }?"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","yields":true,"source":{"line":218,"path":"src/init.luau"}},{"name":"Demote","desc":"Demotes a player and `whoCalled` (Optional) is used for logging purposes.","params":[{"name":"self","desc":"","lua_type":"Ranking"},{"name":"User","desc":"","lua_type":"Player | string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }?"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","yields":true,"source":{"line":264,"path":"src/init.luau"}},{"name":"Fire","desc":"Fires a player and `whoCalled` (Optional) is used for logging purposes.","params":[{"name":"self","desc":"","lua_type":"Ranking"},{"name":"User","desc":"","lua_type":"Player | string | number"},{"name":"whoCalled","desc":"","lua_type":"{ userName: string, userId: number }?"}],"returns":[{"desc":"","lua_type":"rankResponse"}],"function_type":"method","yields":true,"source":{"line":314,"path":"src/init.luau"}},{"name":"getActivity","desc":"Gets a player\'s or everyone\'s current activity","params":[{"name":"User","desc":"","lua_type":"Player | string | number"},{"name":"sorted","desc":"Only when fetching all user activities.","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"activityResponse"}],"function_type":"method","since":"0.3.0","source":{"line":357,"path":"src/init.luau"}},{"name":"removeActivity","desc":"Negates the player\'s activity seconds & message counts. (Does not clear detail logs array.)","params":[{"name":"User","desc":"","lua_type":"Player | string | number"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","since":"0.11.0","yields":true,"source":{"line":414,"path":"src/init.luau"}},{"name":"saveActivity","desc":"Saves the player\'s current activity","params":[{"name":"User","desc":"","lua_type":"Player | string | number"},{"name":"userRank","desc":"","lua_type":"number"},{"name":"secondsSpent","desc":"","lua_type":"number"},{"name":"messagesSent","desc":"","lua_type":"(number | { string })?"},{"name":"shouldFetchGroupRank","desc":"","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"httpResponse"}],"function_type":"method","since":"0.3.0","yields":true,"source":{"line":463,"path":"src/init.luau"}},{"name":"addBlacklist","desc":"Adds a blacklist to your api key.","params":[{"name":"userToBlacklist","desc":"","lua_type":"(Player string | number)"},{"name":"Reason","desc":"","lua_type":"string?"},{"name":"blacklistExecutedBy","desc":"","lua_type":"(Player string | number)?"}],"returns":[{"desc":"","lua_type":"blacklistResponse"}],"function_type":"method","since":"0.6.0","source":{"line":536,"path":"src/init.luau"}},{"name":"deleteBlacklist","desc":"Deletes a blacklist from your api key.","params":[{"name":"userToDelete","desc":"","lua_type":"(Player string | number)"}],"returns":[{"desc":"","lua_type":"BlacklistResponse | InfoResponse"}],"function_type":"method","since":"0.6.0","source":{"line":581,"path":"src/init.luau"}},{"name":"getBlacklists","desc":"Gets either a full list of blacklists or checks if a player is currently blacklisted.","params":[{"name":"userId","desc":"","lua_type":"(string | number | Player)?"}],"returns":[{"desc":"","lua_type":"BlacklistResponse | UserBlacklistResponse"}],"function_type":"method","since":"0.6.0","source":{"line":607,"path":"src/init.luau"}},{"name":"isUserBlacklisted","desc":"Gets either a full list of blacklists or checks if a player is currently blacklisted.","params":[{"name":"User","desc":"","lua_type":"Player | string | number"}],"returns":[{"desc":"","lua_type":"(boolean, string?, string?)"}],"function_type":"method","since":"0.6.0","source":{"line":639,"path":"src/init.luau"}},{"name":"_getGroupFromUser","desc":"Uses roblox\'s group service to get a player\'s rank.","params":[{"name":"groupId","desc":"","lua_type":"number"},{"name":"userId","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Result<{ Rank: number?, Role: string?, Id: number?, errMessage: string? }, string>"}],"function_type":"method","since":"0.1.0","private":true,"yields":true,"source":{"line":673,"path":"src/init.luau"}},{"name":"_verifyUser","desc":"Ensures that the parameter returns the proper type associated to the `typeToReturn`","params":[{"name":"self","desc":"","lua_type":"Ranking"},{"name":"User","desc":"","lua_type":"Player | number | string"},{"name":"typeToReturn","desc":"","lua_type":"\\"UserId\\" | \\"Player\\" | \\"Name\\""}],"returns":[{"desc":"","lua_type":"number | string | Player"}],"function_type":"method","private":true,"source":{"line":741,"path":"src/init.luau"}},{"name":"_getUserIdByName","desc":"Gets a player\'s user identifier via their username.","params":[{"name":"username","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"number?"}],"function_type":"method","private":true,"yields":true,"source":{"line":785,"path":"src/init.luau"}},{"name":"_getNameById","desc":"Gets a player\'s username by their userId","params":[{"name":"userId","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string?"}],"function_type":"method","private":true,"yields":true,"source":{"line":801,"path":"src/init.luau"}},{"name":"_getRoleIdFromRank","desc":"Gets the role id of a rank.","params":[{"name":"rank","desc":"","lua_type":"number | string"}],"returns":[{"desc":"","lua_type":"number?"}],"function_type":"method","private":true,"yields":true,"source":{"line":822,"path":"src/init.luau"}},{"name":"setLoggingOriginationText","desc":"When triggering any method within this module, a header called \'origin\' is sent to describe where the method took place in. (Default is the name of your game)","params":[{"name":"rank","desc":"","lua_type":"number | string"}],"returns":[{"desc":"","lua_type":"number?"}],"function_type":"method","private":true,"yields":true,"source":{"line":865,"path":"src/init.luau"}}],"properties":[{"name":"GroupId","desc":"","lua_type":"Number","source":{"line":10,"path":"src/init.luau"}},{"name":"_key","desc":"","lua_type":"string","private":true,"source":{"line":15,"path":"src/init.luau"}},{"name":"_origin","desc":"","lua_type":"string","private":true,"source":{"line":20,"path":"src/init.luau"}},{"name":"_requestCaches","desc":"","lua_type":"{ [string]: any }","private":true,"source":{"line":25,"path":"src/init.luau"}}],"types":[{"name":"errorKind","desc":"","lua_type":"string | Result<any, string>","source":{"line":59,"path":"src/Definitions.luau"}},{"name":"BaseHttpResponse","desc":"","lua_type":"Result<any,any>","source":{"line":63,"path":"src/Definitions.luau"}},{"name":"InfoResponse","desc":"","lua_type":"{ success: boolean, message: string }","source":{"line":67,"path":"src/Definitions.luau"}},{"name":"GroupIdResponse","desc":"","lua_type":"number","source":{"line":71,"path":"src/Definitions.luau"}},{"name":"BlacklistResponse","desc":"","lua_type":"{ success: boolean, data: { [string]: any } }","source":{"line":75,"path":"src/Definitions.luau"}},{"name":"UserBlacklistResponse","desc":"","lua_type":"{ isUserBlacklisted: boolean, success: boolean, [any]: any }","source":{"line":79,"path":"src/Definitions.luau"}},{"name":"SaveUserActivityResponse","desc":"","lua_type":"{detailedLogs: { { timestampLeftAt: number, secondsUserHasSpent: number, messagesUserHasSent: number }? },messagesUserHasSent: number,secondsUserHasSpent: number}","source":{"line":83,"path":"src/Definitions.luau"}},{"name":"FetchUserActivityResponse","desc":"","lua_type":"{success: boolean,userId: number?,secondsUserHasSpent: number,messagesUserHasSent: number,detailedLogs: {{timestampLeftAt: number,secondsUserHasSpent: number,messagesUserHasSent: number}}}","source":{"line":87,"path":"src/Definitions.luau"}},{"name":"SetRankResponse","desc":"","lua_type":"{success: boolean,message: string?,data:{newRank: {id: number,name: string,rank: number,memberCount: number,},oldRank: {id: number,name: string,rank: number,groupInformation: {id: number,name: string,memberCount: number,hasVerifiedBadge: boolean}}}}","source":{"line":91,"path":"src/Definitions.luau"}}],"name":"Ranking","desc":"A lightweight module to handle all requests sent to https://vibez.dev/","source":{"line":6,"path":"src/init.luau"}}')}}]);